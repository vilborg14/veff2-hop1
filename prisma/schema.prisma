
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username    String @unique
  password String
  admin Boolean @default(false)
  imageUrl String?
  tasks    Task[]
}

model Task {
  id          String      @id @default(uuid())
  title       String
  description String?
  due         DateTime?
  categoryId  String?
  category    Category?   @relation(fields: [categoryId], references: [id])
  tags        TaskTags[]
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    
}

model Category {
  id    String @id @default(uuid())
  title String 
  tasks Task[]
}

model TaskImage {
  id     Int    @id @default(autoincrement())
  url    String @unique
}

model Tag {
  id    Int     @id @default(autoincrement())
  name  String     @unique
  tasks TaskTags[]
}

model TaskTags {
  taskId String
  tagId  Int
  task   Task   @relation(fields: [taskId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([taskId, tagId]) // Composite key for many-to-many relation
}
